version: "3.7"
services:
  # # ELK
  # elk:
  #   image: sebp/elk
  #   container_name: sebp_elk_container
  #   ports:
  #     - 5601:5601
  #     - 9200:9200
  #     - 5044:5044
  #     - 5959:5959/udp
  #   volumes:
  #   - ./elk/logstash:/etc/logstash/conf.d
  #   - ./data/elk:/var/lib/elasticsearch
  #   networks:
  #     devnet1:
  #       ipv4_address: 192.168.9.10

  # filebeat:
  #   image: prima/filebeat
  #   volumes:
  #   - ./elk/filebeat/filebeat.yml:/filebeat.yml
  #   - ./data/logs:/var/log
  #   depends_on:
  #   - elk
  #   networks:
  #     devnet1:
  #       ipv4_address: 192.168.9.11

  # Servico de Redis
  redis:
    container_name: redis_container
    image: redis
    command: redis-server --requirepass AAABBBCCC
    #command: redis-server --requirepass 16b52767d93a8f10d3953e54d46e6f01be0911b8a079470713128409ad2f53b2
    hostname: "redis01"
    # logging:
    #   driver: "syslog"
    #   options:
    #     syslog-address: "udp://192.168.9.14:514"
    # depends_on:
    # -  syslog-ng
    ports:
    - 6379:6379
    volumes:
    - ./data/redis:/data
    - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    # networks:
    #   devnet1:
    #     ipv4_address: 192.168.9.12
    networks:
    - mongodb_network


  # # Servidor WEB
  # nginx:
  #   container_name: nginx_container
  #   image: nginx
  #   # depends_on:
  #   # - syslog-ng
  #   # logging:
  #   #   driver: syslog
  #   #   options:
  #   #     syslog-address: udp://127.0.0.1:514
  #   volumes:
  #   #- /home/nfs_dsk/data:/usr/share/nginx/html
  #   - ./nginx/content:/usr/share/nginx/html
  #   - ./nginx/conf.d:/etc/nginx/conf.d
  #   ports:
  #   - 5080:80
  #   networks:
  #     devnet1:
  #       ipv4_address: 192.168.9.13

  # # Syslog
  # syslog-ng:
  #   build: ./syslog
  #   image: balabit_syslog-ng
  #   container_name: syslog-ng-teste
  #   hostname: "syslog01"
  #   # depends_on:
  #   # - logstash
  #   ports:
  #   - 514:514/udp
  #   - 601:601/tcp
  #   - 6514:6514/tcp
  #   volumes:
  #   - ./data/syslog:/var/log
  #   networks:
  #   - mongodb_network
  #     # devnet1:
  #     #   ipv4_address: 192.168.9.14

  # # Servico de NFS
  # NFS:
  #   container_name: nfs_container
  #   #build: ./nfs
  #   #image: nfs_testez1
  #   image: itsthenetwork/nfs-server-alpine:latest
  #   privileged: true
  #   ports:
  #   - "2049:2049"
  #   volumes:
  #   - ./data/nfs_volume:/nfsshare
  #   environment:
  #   - SHARED_DIRECTORY=/nfsshare
  # #   networks:
  # #     devnet1:
  # #       ipv4_address: 192.168.9.15

  # mysql:
  #   container_name: mysql_container
  #   image: mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_DATABASE: testez1
  #     MYSQL_ROOT_PASSWORD: Zaq12wsX
  #   depends_on:
  #   - rsyslog
  #   logging:
  #     driver: syslog
  #     options:
  #       syslog-address: udp://127.0.0.1:514
  #   ports:
  #   - 3306:3306
  #   volumes:
  #   - ./data/mysql:/var/lib/mysql
  #   networks:
  #     devnet1:
  #       ipv4_address: 192.168.9.16

  # https://www.bmc.com/blogs/mongodb-docker-container/
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
    - MONGO_INITDB_ROOT_USERNAME=root
    - MONGO_INITDB_ROOT_PASSWORD=pass12345
    volumes:
    - mongodb-data:/data/db
    networks:
    - mongodb_network
    ports:
    - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      #restart: unless-stopped
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
    - ME_CONFIG_MONGODB_SERVER=mongodb
    - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
    - ME_CONFIG_MONGODB_ADMINUSERNAME=root
    - ME_CONFIG_MONGODB_ADMINPASSWORD=pass12345
    - ME_CONFIG_BASICAUTH_USERNAME=admin
    - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    volumes:
    - mongodb-data
    depends_on:
    - mongodb
    networks:
    - mongodb_network
    ports:
    - 8081:8081
    healthcheck:
      test:  wget --quiet --tries=3 --spider http://admin:admin123@10.10.10.60:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      #restart: unless-stopped

  # simplepypi:
  #   build: ./simplepypi
  #   container_name: simplepypi_container
  #   image: simplepypi_image
  #   ports:
  #   - 8000:8000
  #   networks:
  #     devnet1:
  #       ipv4_address: 192.168.9.18

volumes:
  # vol_redis_data:
  mongodb-data:
    name: mongodb-data

  # nfs_redis:
  #   driver_opts:
  #     type: nfs
  #     o: addr=192.168.11.22,rw
  #     device: ":/home/desenv/disco"

networks:
  mongodb_network:
    name: mongodb_network
    ipam:
      driver: default
      config:
      - subnet: "192.168.9.0/24"